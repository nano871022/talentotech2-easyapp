
services:
  # 1. Database Service (MySQL)
  db:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - app-network

  # 2. Auth Service
  auth-service:
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    volumes:
      - ./backend/auth-service:/var/www
      - /var/www/vendor
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
    depends_on:
      - db
    networks:
      - app-network

  # 3. Advise Service
  advise-service:
    build:
      context: ./backend/advise-service
      dockerfile: Dockerfile
    container_name: advise-service
    volumes:
      - ./backend/advise-service:/var/www
      - /var/www/vendor
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
    depends_on:
      - db
    networks:
      - app-network

  # 4. Nginx Reverse Proxy
  nginx-proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    container_name: nginx-proxy
    restart: always
    ports:
      - "${BACKEND_PORT}:80"
    depends_on:
      - auth-service
      - advise-service
    networks:
      - app-network

  # 5. Frontend Angular SPA Service (served by NGINX)
  app-frontend:
    build:
      context: .
      dockerfile: frontend.dockerfile
    container_name: app-frontend-nginx
    restart: always
    ports:
      - "${FRONTEND_PORT}:80"
    networks:
      - app-network

  # 6. Static Assets Server (simulating a CDN)
  static-server:
    image: nginx:alpine
    container_name: static-assets-server
    restart: always
    ports:
      - "${STATIC_ASSETS_PORT}:80"
    volumes:
      - ./static-assets:/usr/share/nginx/html
    networks:
      - app-network

  # 7. phpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-container
    restart: always
    ports:
      - "${PHPMYADMIN_PORT}:80"
    environment:
      PMA_HOST: db
      PMA_USER: ${DB_USER}
      PMA_PASSWORD: ${DB_PASS}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
    driver: local
